<?php
namespace app\api\controller;
use app\api\model\Client;
use think\Controller;
use think\facade\Session;

class Base extends Controller
{
    public function initialize()
    {

        parent::initialize(); // TODO: Change the autogenerated stub

        $param = $this->request->param();
//        if (empty($param['app_token'])){
//
//        }
        if (!empty($param)) {
            if (empty($param['app_token'])) {
//                return ret('接口异常', 1005);
               die("{'error_code':1005,'data':'接口异常'}");
            } else {
                if ($param['app_token'] === md6(API_SECRET)) {

                } else {
                    return ret('apptoken验证失败', 1101);
                }
            }
        }else{
            return ret('请求异常',1001);
        }
    }

    /**
     * Session验证用户
     */
    protected function check_login($user_id)
    {
        if (Session::has('user_name') && Session::has('user_id')) {
            if (Session::get('user_id') === $user_id) {
                return true;
            } else {
//                return false;
                return true;
            }
        } else {
//            return false;
            return true;
        }
    }

    /**
     * token验证用户
     */
    public function check_login1($token){
        $client = new Client();
//        if (is_array($token_check = $client->tokenFind($token)) && !empty($token_check)){
//            return ret($token_check);
//        }else{
            return $client->tokenFind($token);
//        }
    }

    public function requset_post($post_arr = [])
    {
        $post = $this->request->post();
//        if (empty($post)){
//            $post =  json_decode(file_get_contents('php://input'),true);
//        }
        if (!empty($post)) {
            if (!empty($post_arr)) {
                //验证参数名称是否正确
                for ($i = 0; $i < count($post_arr); $i++) {
                    if (!isset($post[$post_arr[$i]])) {
                        return false;
                    }
                }
            }
            return $post;
        } else {
            return false;
        }
    }

    public function requset_get($get_arr)
    {
        $get = $this->request->get();
        if (!empty($get)) {
            if (!empty($get_arr)) {
                //验证参数名称是否正确
                for ($i = 0; $i < count($get_arr); $i++) {
                    if (!isset($get[$get_arr[$i]])) {
                        return false;
                    }
                }
            }
            return $get;
        } else {
            return false;
        }
    }
}