<?php


namespace app\api\model;


use think\Exception;
use think\Model;

class SendSheet extends Model
{
    public $table = SEND_SHEET;
    public $putModel;
    public $attrModel;
    public function initialize()
    {
        parent::initialize(); // TODO: Change the autogenerated stub
        $this->putModel = new PutBill();
        $this->attrModel = new Attr();
    }

    public function sendList($id,$send_sn,$company_id,$staff_id,$start_time,$end_time,$text_id){
        try {
            if (!empty($id)) $wheres[] = ['id', 'in', $id];
            if (!empty($send_sn)) $wheres[] = ['send_sn', 'like', "%" . $send_sn . "%"];
            if (!empty($company_id)){
                $putCompany = json_decode($this->putModel->putCompanyFind('',$company_id),true);
                $put_id = array_column($putCompany,'put_id');
                //构造出库单查询条件
                $wherePut[] = ['bill_type','=',4];//出库单
                $wherePut[] = ['id','in',implode(',',$put_id)];
                $match_sn = $this->putModel->putFindOne($wherePut,'bill_sn');
                $wheres[] =  ['match_bill_sn', 'in', implode(',',$match_sn)];
            }//出库单-供应商关联
            if (!empty($staff_id)) $wheres[] = ['send_sn', 'like', "%" . $send_sn . "%"];//员工ID查询
            if (!empty($start_time)) $wheres[] = ['start_time', '>=', strtotime($start_time)];
            if (!empty($end_time)) $wheres[] = ['start_time', '<=', strtotime($end_time)];
            if (!empty($text_id)) $wheres[] = ['id', 'in', $this->sendAttrFind($text_id)]; // 配送方式，配送状态关联
            $wheres[] = ['id','>',0];
            $sendArr = $this->where($wheres)->select();
            if (!empty($sendArr)){
                foreach ($sendArr as $key=>$v){
                   $put =  $this->putModel->putList('',$v['match_bill_sn'])['data'][0];
//                    $sendArr[$key]['company_info'] = $this->putModel->putCompanyFind($put['id']);//购货公司
                    $sendArr[$key]['start_time'] = date('Y-m-d H:i:s',$v['start_time']);//出库时间
                    $sendArr[$key]['staff_info'] = $this->sendStaffFind($put['id']);//员工信息
                    $sendArr[$key]['attr_info'] = $this->attrModel->AttrList('send_id',$v['id'],ATTR_TEXT_SEND_LINK);//属性
                    $sendArr[$key]['put_info'] = $this->putModel->putList('',$v['match_bill_sn'])['data'];//出货单信息
                }
            }
            return ['code'=>0,'data'=>$sendArr];

        }catch (Exception $e){
            return ['code'=>1005,'data'=>$e->getMessage()];
        }
    }

    /**
     * @param $send_id
     * @param $key
     * @param $value
     * return array
     * send_sheet单字段修改
     */
    public function sendOneSave($send_id,$key,$value){
        $s_arr = [
            'is_del',
            'start_time',
            'end_time',
        ];
        if (in_array($key,$s_arr)){
           if ($this->save([$key=>$value],[$this->pk=>$send_id])){
               return ['code'=>0,'更新成功'];
           }else{
               return ['code'=> 1004,'data'=> '参数错误，操作异常'];
           }
        }else{
            return ['code'=>1004 ,'data' => '参数错误，当前字段不可修改'];
        }
    }

    /**
     * @param $text_id
     * @return string
     */
    public function sendAttrFind($text_id){
        $send_id = implode(',',array_unique($this->table(ATTR_TEXT_SEND_LINK)->column('send_id')));
        for ($i=0;$i<count($text_id);$i++){
            $whereLink[] = ['send_id','>',0];
            $whereLinkOr[] = ['text_id','=',$text_id[$i]];
            $whereLinkOr[] = ['table_id','=',$text_id[$i]];
            if (!empty($send_id)){
                $whereLink[] = ['send_id','in',$send_id];
            }
//            $aa[] = $this->table(COMPANY_ATTR_LINK)->whereOr($whereLinkOr)->where('company_id','in',$company_id)->fetchSql()->column('company_id');
            $send_id = implode(',',array_unique($this->table(ATTR_TEXT_SEND_LINK)->whereOr($whereLinkOr)->where('send_id','in',$text_id)->column('send_id')));
            unset($whereLink);
            unset($whereLinkOr);

        }
        return $send_id;
    }
    public function sendAdd($sendData){
        $this->startTrans();
        try{
            if (empty($sendData['bill_sn'])){
                return ['code'=>1004,'data'=>'出库单号不能为空'];
            }
            if (empty($sendData['staff_id'])){
                return ['code'=>1004,'data'=>'员工ID不能为空'];
            }
            if (empty($sendData['text_id']) || !is_array($sendData['text_id'])){
                return ['code'=>1004,'data'=>'属性不能为空/格式不正确'];
            }
            $data = [
                'send_sn' => $sendData['send_sn']??'PS'.rand(1000,9999).time(),
                'match_bill_sn' => $sendData['bill_sn'],
                'is_del' => $sendData['is_del']??1,
                'start_time' => !empty($sendData['start_time'])?strtotime($sendData['start_time']):time(),
                'end_time' => !empty($sendData['end_time'])?strtotime($sendData['end_time']):'',
            ];
            $this->allowField(true)->save($data);
            $s1 =  $this->send_attr_text_link($this->id,$sendData['text_id']);
            $s2 =  $this->send_staff_link($this->id,$sendData['staff_id']);
            if ($s1['code'] == 0 && $s2['code'] == 0){
                $this->commit();
                return ['code'=>0,'data'=>$this->id];
            }else{
               if($s1['code'] != 0) return $s1;
               if($s2['code'] != 0) return $s2;
            }
        }catch (Exception $e){
            $this->rollback();
            return ['code'=> 1005 ,'data'=>$e->getMessage()];
        }
    }

    //新增配送单-员工关联
    public function send_staff_link($send_id,$staff_id){
        return ['code'=>0,'data'=>''];
    }
    //查询配送单-员工关联
    public function sendStaffFind($send_id){
        return ['code'=>0,'data'=>''];
    }
    public function send_attr_text_link($send_id,$text_id){
        try {
            $send_link = [];
            for ($i = 0; $i < count($text_id); $i++) {
                $ta_link = $this->table(ATTR_LINK)->where('text_id', '=', $text_id[$i])->find();
                $attr_id[] = $ta_link->attr_id;
                $send_link[] = [
                    'text_id' => $text_id[$i],
                    'attr_id' => $ta_link->attr_id,
                    'send_id' => $send_id
                ];
            }

            if (!empty($attr_id)){
                $whereDel[] = ['send_id', '=', $send_id];
                $whereDel[] = ['attr_id','in',implode(',',$attr_id)];
                $this->table(ATTR_TEXT_SEND_LINK)->where($whereDel)->delete();
            }
         $this->table(ATTR_TEXT_SEND_LINK)->insertAll($send_link);
            return ['code'=>0 ,'data'=>'操作成功'];
        }catch (Exception $e){
            return ['code'=>1005,'data'=>$e->getMessage()];
        }
    }


    /**
     * @param $send_id
     * @param $attr_id
     * @param $text_id
     * @return array
     * 同属性修改属性值(更改配送单状态，方式等)
     */
    public function send_attr_save_text($send_id,$attr_id,$text_id){
        try {
            $wheres[] = ['send_id', '=', $send_id];
            $wheres[] = ['attr_id', '=', $attr_id];
            $this->table(ATTR_TEXT_SEND_LINK)->where($wheres)->update(['text_id' => $text_id]);
            return ['code' => 0, 'data' => '操作成功'];
        }catch (Exception $w){
            return ['code'=> 1005 ,'data'=>$w->getMessage()];
        }
    }
}